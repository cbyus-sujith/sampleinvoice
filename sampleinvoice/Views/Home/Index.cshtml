<div style="display: flex; align-items: center;">
    <a asp-action="Create" asp-controller="Home" class="btn btn-primary">Create New</a>
    <form id="searchForm" style="margin-left: auto;">
        <div class="form-group" style="display: flex;">
            <input type="text" id="searchString" placeholder="Search..." class="form-control">
            <input type="submit" value="Search" class="btn btn-primary">
            <button type="button" id="clearSearch" class="btn btn-secondary" style="display: none;">Clear Search</button>
        </div>
    </form>
</div>

<div id="searchResult" style="display: none;"></div>
<table id="invoicesTable" class="table">
    <thead>
        <tr>
            <th>Invoice Number</th>
            <th>Customer</th>
            <th>Date</th>
            <th>Customer PO</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        <!-- Table rows will be dynamically populated by JavaScript -->
    </tbody>
</table>
<div id="pagination" class="pagination"></div>
<script>
    $(document).ready(function () {
        var currentPage = 1;
        var pageSize = 10;

        // Load all invoices on page load
        loadAllInvoices();

        // Search functionality
        $('#searchForm').submit(function (e) {
            e.preventDefault();
            searchInvoices();
        });

        // Clear search functionality
        $('#clearSearch').click(function () {
            $('#searchString').val('');
            loadAllInvoices();
            $('#searchResult').hide();
            $(this).hide();
        });

        // Delete invoice functionality
        $(document).on('click', '.deleteInvoice', function () {
            var invoiceId = $(this).data('id');
            var row = $(this).closest('tr');
            var invoiceNumber = row.find('td:nth-child(1)').text();
            var customer = row.find('td:nth-child(2)').text();
            var date = row.find('td:nth-child(3)').text();
            var customerPO = row.find('td:nth-child(4)').text();

            var confirmationMessage = 'Are you sure you want to delete the following invoice?\n\n' +
                'Invoice Number: ' + invoiceNumber + '\n' +
                'Customer: ' + customer + '\n' +
                'Date: ' + date + '\n' +
                'Customer PO: ' + customerPO + '\n\n' +
                'This action cannot be undone.';

            if (confirm(confirmationMessage)) {
                deleteInvoice(invoiceId);
            }
        });

        function loadAllInvoices() {
            $.ajax({
                url: '/api/InvoicesApi/All',
                type: 'GET',
                success: function (data) {
                    displayInvoices(data);
                    $('#searchResult').hide();
                    $('#clearSearch').hide();
                    renderPagination(data.length);
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log('Error:', errorThrown);
                }
            });
        }

        function searchInvoices() {
            var searchString = $('#searchString').val();
            // Load invoices with search string
            $.ajax({
                url: '/api/InvoicesApi/Search',
                type: 'GET',
                data: { searchString: searchString },
                success: function (data) {
                    displayInvoices(data);
                    $('#searchResult').text('Search results for: ' + searchString).show();
                    $('#clearSearch').show();
                    renderPagination(data.length);
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log('Error:', errorThrown);
                }
            });
        }

        function displayInvoices(data) {
            var startIndex = (currentPage - 1) * pageSize;
            var endIndex = Math.min(startIndex + pageSize, data.length);
            $('#invoicesTable tbody').empty();
            if (data.length === 0) {
                $('#invoicesTable tbody').append('<tr><td colspan="5">No invoices found.</td></tr>');
            } else {
                for (var i = startIndex; i < endIndex; i++) {
                    var invoice = data[i];
                    var row = '<tr>' +
                        '<td>' + invoice.invoiceNumber + '</td>' +
                        '<td>' + invoice.customer + '</td>' +
                        '<td>' + new Date(invoice.date).toLocaleDateString() + '</td>' +
                        '<td>' + invoice.customerPO + '</td>' +
                        '<td>' +
                        '<a href="/Home/Details/' + invoice.invoiceId + '">View</a> | ' +
                        '<a href="/Home/Edit/' + invoice.invoiceId + '">Edit</a> | ' +
                        '<a href="#" class="deleteInvoice" data-id="' + invoice.invoiceId + '">Delete</a>' +
                        '</td>' +
                        '</tr>';
                    $('#invoicesTable tbody').append(row);
                }
            }
        }

        function renderPagination(totalItems) {
            var totalPages = Math.ceil(totalItems / pageSize);
            var pagination = $('#pagination');
            pagination.empty();
            var prevButton = '<a href="#" class="page-link" id="prevPage">Previous</a>';
            pagination.append(prevButton);
            for (var i = 1; i <= totalPages; i++) {
                var pageLink = '<a href="#" class="page-link page-num">' + i + '</a>';
                pagination.append(pageLink);
            }
            var nextButton = '<a href="#" class="page-link" id="nextPage">Next</a>';
            pagination.append(nextButton);

            $('.page-num').click(function (e) {
                e.preventDefault();
                currentPage = parseInt($(this).text());
                loadAllInvoices();
            });

            $('#prevPage').click(function (e) {
                e.preventDefault();
                if (currentPage > 1) {
                    currentPage--;
                    loadAllInvoices();
                }
            });

            $('#nextPage').click(function (e) {
                e.preventDefault();
                if (currentPage < totalPages) {
                    currentPage++;
                    loadAllInvoices();
                }
            });
        }

        function deleteInvoice(invoiceId) {
            $.ajax({
                url: '/api/InvoicesApi/' + invoiceId,
                type: 'DELETE',
                success: function () {
                    // Reload invoices after successful deletion
                    loadAllInvoices();
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log('Error:', errorThrown);
                    alert('Error deleting invoice. Please try again.');
                }
            });
        }
    });

</script>
