@model sampleinvoice.Models.Invoice
@{
    ViewData["Title"] = "Edit";
}

<h1>Edit Invoice</h1>

<form id="invoiceForm" method="post" class="row g-3">
    <!-- Invoice details -->
    <div class="row g-3">
        <!-- Date -->
        <div class="col-md-3">
            <div class="form-group">
                <label asp-for="Date" class="control-label">Invoice Date</label>
                <input asp-for="Date" id="invoiceDate" class="form-control" type="date" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
        </div>

        <!-- Customer and Customer PO -->
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Customer" class="control-label">Customer Name</label>
                        <input asp-for="Customer" id="customerName" class="form-control" />
                        <span asp-validation-for="Customer" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="CustomerPO" class="control-label">Customer PO</label>
                        <input asp-for="CustomerPO" id="customerPO" class="form-control" />
                        <span asp-validation-for="CustomerPO" class="text-danger"></span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Invoice Number -->
        <div class="col-md-3">
            <div class="form-group">
                <label asp-for="InvoiceNumber" class="control-label">Invoice Number</label>
                <input asp-for="InvoiceNumber" id="invoiceNumber" class="form-control" readonly/>
                <span asp-validation-for="InvoiceNumber" class="text-danger"></span>
            </div>
        </div>
    </div>

    <!-- Button to add products -->
    <div class="col-md-12">
        <button type="button" id="addProductButton" class="btn btn-primary">Add Product</button>
    </div>

    <!-- Product table -->
    <table id="productTable" class="table">
        <!-- Table headers -->
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
                <th>Unit Cost</th>
                <th>Subtotal</th>
                <th>Action</th>
            </tr>
        </thead>
        <!-- Table body -->
        <tbody id="productTableBody">
            <!-- Product rows will be dynamically added here -->
        </tbody>
        <!-- Table footer -->
        <tfoot>
            <tr>
                <td colspan="3"></td>
                <td><label for="totalAmount">Total:</label></td>
                <td id="totalAmount">0.00</td>
            </tr>
        </tfoot>
    </table>

    <!-- Invoice Items (hidden) -->
    <input type="hidden" id="invoiceItems" name="invoiceItems" />

    <!-- Other invoice details -->
    <!-- Currency Selection -->
    <div class="col-md-3">
        <div class="form-group">
            <label asp-for="Currency" class="control-label">Currency</label>
            <select asp-for="Currency" id="currency" class="form-control">
                <option value="INR" selected>INR</option>
                <option value="USD">USD</option>
                <option value="EUR">EUR</option>
                <option value="GBP">GBP</option>
            </select>
        </div>
    </div>

    <!-- Payment Method Selection -->
    <div class="col-md-3">
        <div class="form-group">
            <label asp-for="PaymentMethod" class="control-label">Payment Method</label>
            <select asp-for="PaymentMethod" id="paymentMethod" class="form-control">
                <option value="Cash" selected>Cash</option>
                <option value="CreditCard">Credit Card</option>
                <option value="PayPal">PayPal</option>
                <option value="BankTransfer">Bank Transfer</option>
            </select>
        </div>
    </div>

    <!-- VAT Percentage -->
    <div class="col-md-3">
        <div class="form-group">
            <label for="vatPercentage">VAT Percentage</label>
            <input id="vatPercentage" name="VatPercentage" class="form-control" type="number" step="0.01" />
        </div>
    </div>

    <!-- Freight Charge -->
    <div class="col-md-3">
        <div class="form-group">
            <label asp-for="FreightCharge" class="control-label">Freight Charge</label>
            <input asp-for="FreightCharge" id="freightCharge" class="form-control" />
            <span asp-validation-for="FreightCharge" class="text-danger"></span>
        </div>
    </div>

    <!-- VAT Amount -->
    <div class="col-md-3">
        <div class="form-group">
            <label for="vatAmount">VAT Amount</label>
            <input id="vatAmount" name="vatAmount" class="form-control" readonly />
        </div>
    </div>

    <!-- Submit Button -->
    <div class="col-md-12">
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>
</form>

<!-- Modal for adding product details -->
<div class="modal" id="addProductModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Product Details</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="productName">Product Name</label>
                    <input type="text" class="form-control" id="productName">
                </div>
                <div class="form-group">
                    <label for="productQuantity">Quantity</label>
                    <input type="number" class="form-control" id="productQuantity">
                </div>
                <div class="form-group">
                    <label for="productUnitCost">Unit Cost</label>
                    <input type="number" class="form-control" id="productUnitCost">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="addProduct">Add Product</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            var invoiceId = @Html.Raw(Json.Serialize(ViewData["InvoiceId"]));

            // Load invoice data via AJAX
            $.ajax({
                url: '/api/InvoicesApi/' + invoiceId,
                type: 'GET',
                success: function (data) {
                    // Populate form fields with invoice data
                    $('#invoiceDate').val(data.date.substring(0, 10));
                    $('#customerName').val(data.customer);
                    $('#customerPO').val(data.customerPO);
                    $('#invoiceNumber').val(data.invoiceNumber);
                    $('#currency').val(data.currency);
                    $('#paymentMethod').val(data.paymentMethod);
                    $('#vatPercentage').val(data.vatPercentage);
                    $('#freightCharge').val(data.freightCharge);
                    // Populate product table and calculate total amount
                    var productsHtml = '';
                    var totalSubtotal = 0;

                    if (data.invoiceItems && data.invoiceItems.length > 0) {
                        data.invoiceItems.forEach(function (item) {
                            var subtotal = item.quantity * item.unitPrice;
                            totalSubtotal += subtotal;
                            productsHtml += '<tr>' +
                                '<td>' + item.product + '</td>' +
                                '<td>' + item.quantity + '</td>' +
                                '<td>' + item.unitPrice + '</td>' +
                                '<td>' + subtotal.toFixed(2) + '</td>' +
                                '<td><button type="button" class="btn btn-danger btn-sm deleteProduct">Delete</button></td>' +
                                '</tr>';
                        });
                    }

                    $('#productTableBody').html(productsHtml);

                    // Calculate total amount
                    var freightCharge = parseFloat(data.freightCharge) || 0;
                    var vatPercentage = parseFloat(data.vatPercentage) || 0;
                    var vatAmount = (totalSubtotal * vatPercentage) / 100;
                    var totalAmount = totalSubtotal;
                    $('#totalAmount').text(totalAmount.toFixed(2));
                    // Display VAT amount
                    $('#vatAmount').val(vatAmount.toFixed(2));
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log('Error:', textStatus, errorThrown);
                }
            });
            // Add product button click event
            $("#addProductButton").click(function () {
                $("#addProductModal").modal("show");
            });

            // Add product modal button click event
            $("#addProduct").click(function () {
                addProduct();
                $("#addProductModal").modal("hide");
            });

            // Delete product button click event
            $(document).on("click", ".deleteProduct", function () {
                deleteProduct($(this));
            });

            // Calculate VAT amount on VAT percentage change
            $("#vatPercentage").on("input", function () {
                calculateVatAmount();
            });

            // Form submission
            $("#invoiceForm").submit(function (event) {
                event.preventDefault();
                prepareInvoiceItems();
                submitInvoice();
            });
        });

        function addProduct() {
            var productName = $("#productName").val();
            var productQuantity = $("#productQuantity").val();
            var productUnitCost = $("#productUnitCost").val();
            var subtotal = productQuantity * productUnitCost;

            // Append new row to the product table
            $("#productTableBody").append(
                "<tr>" +
                "<td>" + productName + "</td>" +
                "<td>" + productQuantity + "</td>" +
                "<td>" + productUnitCost + "</td>" +
                "<td>" + subtotal.toFixed(2) + "</td>" +
                "<td><button type='button' class='btn btn-danger btn-sm deleteProduct'>Delete</button></td>" +
                "</tr>"
            );

            updateInvoice();
        }

        function deleteProduct(element) {
            element.closest("tr").remove();
            updateInvoice();
        }

        function updateInvoice() {
            var totalAmount = 0;
            $("#productTableBody tr").each(function () {
                totalAmount += parseFloat($(this).find("td:eq(3)").text());
            });

            $("#totalAmount").text(totalAmount.toFixed(2));

            calculateVatAmount();
        }

        function calculateVatAmount() {
            var vatPercentage = parseFloat($("#vatPercentage").val());
            var totalAmount = parseFloat($("#totalAmount").text());
            var vatAmount = (vatPercentage / 100) * totalAmount;

            $("#vatAmount").val(vatAmount.toFixed(2));
        }

        function prepareInvoiceItems() {
            var invoiceItems = [];

            $("#productTableBody tr").each(function () {
                var productName = $(this).find("td:eq(0)").text();
                var quantity = $(this).find("td:eq(1)").text();
                var unitCost = $(this).find("td:eq(2)").text();

                var item = {
                    Product: productName,
                    Quantity: parseInt(quantity),
                    UnitPrice: parseFloat(unitCost)
                };

                invoiceItems.push(item);
            });

            return invoiceItems;
        }

        function submitInvoice() {
            var invoiceId = @Html.Raw(Json.Serialize(ViewData["InvoiceId"]));
            var invoiceItems = prepareInvoiceItems();

            var formData = $("#invoiceForm").serializeArray();

            var requestData = {
                InvoiceNumber: formData[4].value,
                Customer: formData[2].value,
                Date: formData[0].value,
                CustomerPO: formData[3].value,
                Currency: formData[6].value,
                PaymentMethod: formData[7].value,
                VatPercentage: parseFloat(formData[8].value),
                FreightCharge: parseFloat(formData[9].value),
                InvoiceItems: invoiceItems
            };


            // Make AJAX request
            $.ajax({
                url: '/api/InvoicesApi/' + invoiceId,
                type: 'PUT',
                contentType: 'application/json',
                dataType: 'json',
                data: JSON.stringify(requestData),
                success: function (data) {
                    console.log("Invoice updated successfully");
                    var confirmRedirect = confirm("Invoice updated successfully. Do you want to redirect to the index page?");
                    if (confirmRedirect) {
                        window.location.href = "/Home/Index";
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error submitting invoice:", error);
                }
            });
        }
    </script>
}

